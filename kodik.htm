<!DOCTYPE html>
<html lang="ru">

<head>
  <meta charset="UTF-8">
</head>

<body>
  <div id="control_butons">
    <div id="resume_butons">
      <div class="_button" id="resume_buton" title="Воспроизведёт следующую серию после последней просмотренной">Продолжить +1</div>
    </div>
    <div id="scroll_butons" class="hidden">
      <div class="_button" id="-90" title="Перемотает назад на примерную динну опенинга"><<90с</div>
      <div class="_button" id="+90" title="Перемотает вперёд на примерную динну опенинга">90с>></div>
    </div>

  </div>
  <iframe id="kodik" src="loading.htm" frameborder="no" allow="autoplay *; fullscreen *"></iframe>
</body>
<style>
  body {
    background-color: rgb(32, 32, 32);
    margin: 0 0 0 0;
  }

  .hidden {
    display: none !important;
  }

  #kodik {
    position: fixed;
    width: 100%;
    height: 100%;
    border: none;
    margin: 0;
    padding: 0;
    overflow: hidden;
    aspect-ratio: 16/9;
  }

  #control_butons {
    position: fixed;
    left: 0;
    right: 0;
    z-index: 1000;
    pointer-events: none;
    display: flex;
    align-items: center;
    flex-direction: column;
  }

  #scroll_butons {
    display: flex;
  }

  ._button {
    color: aliceblue;
    background-color: #363d43;
    /* border-top-left-radius: 3px; */
    /* border-top-right-radius: 3px; */
    border-bottom-right-radius: 3px;
    border-bottom-left-radius: 3px;
    padding: 1ch;
    cursor: pointer;
    font: 700 12px / 30px Arial;
    pointer-events: auto;
  }

  ._button:hover {
    background-color: #2b3035;
  }
</style>


<script>

  var url_get = new URL(window.location.href)
  const MyServerURL = url_get.searchParams.get('MyServerURL') ? url_get.searchParams.get('MyServerURL') : 'server.dygdyg.ru' //'dygdyg.duckdns.org'
  var kodik = document.createElement("iframe");
  var BaseAnimeCurrent = JSON.parse(localStorage.getItem('BaseAnimeCurrent')) || {};
  var data_anime
  var kodikIframe
  var shikimori_id = url_get.searchParams.get('shikimori_id') ? url_get.searchParams.get('shikimori_id') : 50346
  var start_load = false

  // Screen.lockOrientation("landscape")

  start()

  async function start() {
    await anim_data()
    await start_kodik()
    await media_player()
  }

  /////////////////////////////////////////////// Подгрузка базы данных аниме ///////////////////////////////////////////////////
  async function anim_data() {
    console.log(shikimori_id)
    var url_serch = `https://${MyServerURL}/kodik.php?method=search&limit=1&with_material_data=true&shikimori_id=${shikimori_id}`
    if (BaseAnimeCurrent[shikimori_id]) {
      url_serch = `${url_serch}&translation_id=${BaseAnimeCurrent[shikimori_id].translation.id}`
    }

    const response = await fetch(url_serch);
    data = await response.json(response);
    data_anime = data.results[0]
    console.log("anime", data_anime)
  }
  ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


  /////////////////////////////////////////////// Запуск плеера в iframe /////////////////////////////////////////////////////////
  async function start_kodik() {
    var get_sav_url_data = "&season=1&episode=1"
    if (BaseAnimeCurrent[shikimori_id]) {
      get_sav_url_data = `&season=${BaseAnimeCurrent[shikimori_id].season}&episode=${BaseAnimeCurrent[shikimori_id].episode}`
    }
    // var url = url_get.searchParams.get('url') ? url_get.searchParams.get('url') :"https://kodik.cc/find-player"
    var url = data_anime.link ? data_anime.link : "https://kodik.cc/find-player"
    document.getElementById("kodik").src = `${url}?shikimoriID=${shikimori_id}${get_sav_url_data}`


    if (window.addEventListener) {
      window.addEventListener('message', kodikMessageListener);
    } else {
      window.attachEvent('onmessage', kodikMessageListener);
    }

    kodikIframe = document.getElementById("kodik").contentWindow;

    kodikIframe.window.addEventListener('keydown', (e) => {
      // console.log(e.code, this)
    }
    );
    document.getElementById("kodik").addEventListener('load', () => {
      if (start_load == false) {
        console.log(1111, "load")
        if (BaseAnimeCurrent[shikimori_id]) kodik_player_api(
          {
            method: "change_episode",
            season: BaseAnimeCurrent[shikimori_id].season,
            episode: BaseAnimeCurrent[shikimori_id].episode
          }
        )
        start_load = true
      }
    })

    document.getElementById("resume_buton").addEventListener('click', function (event) {

      if (BaseAnimeCurrent[shikimori_id]) {
        kodik_player_api(
          {
            method: "change_episode",
            season: BaseAnimeCurrent[shikimori_id].season,
            episode: BaseAnimeCurrent[shikimori_id].episode
          }
        )
        kodik_player_api(
          {
            method: "change_episode",
            season: BaseAnimeCurrent[shikimori_id].season,
            episode: BaseAnimeCurrent[shikimori_id].episode + 1
          }
        )
      }
      document.getElementById("resume_buton").classList.add("hidden")
      setTimeout(() => {
        kodik_player_api({
          method: "play"
        })
      }, 1500);

    })

  }

  /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 

  ////////////////////////////////////////////// Перемотка 90 секунд ///////////////////////////////////////////////////////////

  document.getElementById("+90").addEventListener('click', function (event) {
    scroll_video(90)
  }
  )
  document.getElementById("-90").addEventListener('click', function (event) {
    scroll_video(-90)
  }
  )

  function scroll_video(p) {
    // kodikIframe.postMessage({ key: "kodik_player_api", value: { method: "seek", seconds: navigator.mediaSession.metadata.time + p } }, '*');
    kodik_player_api({ method: "seek", seconds: navigator.mediaSession.metadata.time + p })
  }


  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


  /////////////////////////////////////////////// Управление kodik_player ///////////////////////////////////////////////////////
  function kodikMessageListener(message) {
    console.log("[kodik player]", message.data);
    switch (message.data.key) {
      case "kodik_player_play":
        document.getElementById("resume_buton").classList.add("hidden")
        document.getElementById("scroll_butons").classList.remove("hidden")
        break
      case "kodik_player_pause":
        // document.getElementById("resume_buton").classList.remove("hidden")
        break
      case "kodik_player_time_update":
        navigator.mediaSession.metadata.time = message.data.value;
        break
      case "kodik_player_current_episode":
        navigator.mediaSession.metadata.artist = `Серия: ${message.data.value.episode}`
        // console.log("dat1",data_anime.material_data);
        // delete BaseAnimeCurrent[null];
        if (data_anime.material_data.episodes_total == message.data.value.episode) {
          delete BaseAnimeCurrent[shikimori_id];
          BaseAnimeCurrent["lasttime"] = new Date().getTime() / 1000
          // console.log("delete base",data_anime.material_data, message.data.value.episode)
        } else {
          BaseAnimeCurrent[shikimori_id] = message.data.value;
          BaseAnimeCurrent[shikimori_id]["material_data"] = data_anime.material_data
          BaseAnimeCurrent[shikimori_id]["lasttime"] = new Date().getTime() / 1000
          BaseAnimeCurrent["lasttime"] = new Date().getTime() / 1000
        }
        console.log("base", BaseAnimeCurrent)
        localStorage.setItem('BaseAnimeCurrent', JSON.stringify(BaseAnimeCurrent));
        break;

      default:
        break;
    }

  }



  ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  ///////////////////////////////////////////////  Управление плеером через пост   /////////////////////////////////////////////// 

  async function kodik_player_api(e) {
    kodikIframe.postMessage({ key: "kodik_player_api", value: e }, '*');
  }


  ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  ///////////////////////////////////////////////  Настройка Media Session API   /////////////////////////////////////////////// 
  async function media_player() {
    if ('mediaSession' in navigator) {

      navigator.mediaSession.metadata = new MediaMetadata({
        title: data_anime.material_data.title,
        artist: ``,
        album: '',
        artwork: [{ src: data_anime.material_data.poster_url }]
      });

      navigator.mediaSession.metadata.time = 0;
      navigator.mediaSession.setActionHandler('play', () => {
        kodikIframe.postMessage({ key: "kodik_player_api", value: { method: "play" } }, '*');
        console.log('Воспроизведение');
      });

      navigator.mediaSession.setActionHandler('pause', () => {
        kodikIframe.postMessage({ key: "kodik_player_api", value: { method: "pause" } }, '*');
      });
      navigator.mediaSession.setActionHandler('stop', () => {
        kodikIframe.postMessage({ key: "kodik_player_api", value: { method: "pause" } }, '*');
      });

      navigator.mediaSession.setActionHandler('previoustrack', () => {
        console.log('Перемотка назад');
        kodikIframe.postMessage({ key: "kodik_player_api", value: { method: "seek", seconds: navigator.mediaSession.metadata.time - 90 } }, '*');
      });

      navigator.mediaSession.setActionHandler('nexttrack', () => {
        console.log('Перемотка вперед');
        kodikIframe.postMessage({ key: "kodik_player_api", value: { method: "seek", seconds: navigator.mediaSession.metadata.time + 90 } }, '*');
      });
    } else {
      console.log('Media Session API не поддерживается');
    }
  }
  ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
</script>

</html>